name: Blink-Worker CD

on:
  push:
    branches: [ test ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Getting S3 Object
        id: s3
        uses: jcfrane/s3-get-object-action@v1.0
        with:
          region: ap-southeast-2
          bucket: blink-env
          aws-access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          object-key: env/dev/application.yml
          filename: application.yml

      # worker와 batch 모듈의 resources 디렉토리로 복사
      - name: Move application.yml
        run: |
          mkdir -p blink-worker/src/main/resources
          mkdir -p blink-batch/src/main/resources
          cp application.yml blink-worker/src/main/resources/
          cp application.yml blink-batch/src/main/resources/

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build With Gradle
        run: ./gradlew :blink-worker:bootJar :blink-batch:bootJar -x test

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp blink-worker/build/libs/*-SNAPSHOT.jar deploy/application.jar
          cp blink-batch/build/libs/*-SNAPSHOT.jar deploy/batch.jar
          mkdir -p deploy/.ebextensions
          cp -r .ebextensions/* deploy/.ebextensions/
          if test -d .platform ; then cp -r .platform deploy/.platform ; fi
          if test -e Procfile ; then cp Procfile ./deploy/Procfile ; fi
          if test -e cron.yaml ; then cp cron.yaml deploy/cron.yaml ; fi
          ls -al deploy
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: link-server-worker
          environment_name: Link-server-worker-env-1
          version_label: Link-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 900